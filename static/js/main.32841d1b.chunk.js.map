{"version":3,"sources":["components/Header.js","components/Footer.js","components/Back.js","components/Body.js","components/Help.js","components/Contact.js","components/About.js","components/Main.js","App.js","serviceWorker.js","index.js","favicon.ico"],"names":["Login","props","state","isModalOpen","toggleModal","bind","this","setState","id","onClick","className","Modal","isOpen","toggle","ModalHeader","ModalBody","Form","onSubmit","handleLogin","FormGroup","row","Col","sm","Input","type","name","innerRef","input","inputroll","placeholder","Label","value","check","remember","Row","Button","outline","color","ModalFooter","Component","Header","isNavOpen","toggleNav","Navbar","dark","expand","fixed","NavbarToggler","NavbarBrand","href","src","height","width","alt","Collapse","navbar","Nav","NavItem","to","Jumbotron","required","val","length","minLength","len","Register","values","JSON","stringify","password","confirmpassword","alert","window","confirm","handleSubmit","htmlFor","text","model","validators","maxLength","show","messages","md","Footer","Back","class","React","Body","Help","Contact","About","Main","path","component","exact","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.32841d1b.chunk.js","sourcesContent":["import React,{Component} from 'react';\nimport {Nav,Navbar,NavbarBrand,Jumbotron,Row,Col,NavItem,Button,Collapse,NavbarToggler,Modal,ModalHeader,ModalBody,ModalFooter,Form,FormGroup,Input,Label} from 'reactstrap';\nimport {NavLink,Link} from 'react-router-dom';\n\nclass Login extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      isModalOpen:false\n    };\n    this.toggleModal=this.toggleModal.bind(this);\n  }\n  toggleModal(){\n    this.setState({\n      isModalOpen:!this.state.isModalOpen\n    });\n  }\n  render(){\n    return(\n      <div>\n        <Link id=\"log\"><h6 onClick={this.toggleModal}><span className=\"fa fa-sign-in\"></span> &nbsp;<strong>Login</strong></h6></Link>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader className=\"modal-header\" toggle={this.toggleModal}>\n              Login\n          </ModalHeader>\n          <ModalBody className=\"modal-body modal-lg\">\n            <div className=\"container login-form\">\n              <Form onSubmit={this.handleLogin}>\n                <FormGroup row>\n                  <Col sm={6}><Input type=\"text\" id=\"inputroll\" name=\"inputroll\" innerRef={(input)=>this.inputroll=input} placeholder=\"Enter Roll No.\"/></Col>\n                  <Col sm={6}><Input type=\"password\" id=\"inputpass\" name=\"inputpass\" innerRef={(input)=>this.inputroll=input} placeholder=\"Enter Password\"/></Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Col sm={7}><Label>Select Year : &nbsp;</Label><select ><option value=\"First Year\">First Year</option><option value=\"Second Year\">Second Year</option><option value=\"Third Year\">Third Year</option><option value=\"Final Year\">Final Year</option><option value=\"Super Final Year\">Super Final Year</option></select>\n                  </Col>\n                  <Col sm={5}><FormGroup check><Label check><Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = input}  />Remember Me</Label></FormGroup></Col>\n                </FormGroup>\n                <Row><Col sm={6}></Col><Col sm={6}><Button outline color=\"danger\" onClick={this.toggleModal}>Cancel</Button>  &nbsp;  &nbsp;<Button outline type=\"submit\" value=\"submit\" color=\"success\">Login</Button></Col></Row>\n              </Form>\n            </div>\n          </ModalBody>\n          <ModalFooter className=\"modal-footer\">\n            <small><strong>Note : &nbsp;</strong> Please enter correct details!</small>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\nclass Header extends Component{\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isNavOpen: false,\n    };\n    this.toggleNav=this.toggleNav.bind(this);\n  }\n\n  toggleNav() {\n    this.setState({\n      isNavOpen: !this.state.isNavOpen\n\n    });\n  }\n  \n  render(){\n    return(\n      <div>\n        <Navbar dark expand=\"sm\" color=\"danger\" fixed=\"top\">\n          <div className=\"container\">\n            <NavbarToggler onClick={this.toggleNav} />\n            <NavbarBrand className=\"mr-auto\" href=\"/AttMng\"><img src='assets/img/sample2.jpg' height=\"40\" width=\"40\" alt='Attendance Manager' /></NavbarBrand>\n            <Collapse isOpen={this.state.isNavOpen} navbar>\n              <Nav navbar>\n                <NavItem>\n                  <NavLink className=\"nav-link\"  to='/AttMng'><span className=\"fa fa-home fa-lg\"></span> &nbsp;Home</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to='/AttMng/aboutus'><span className=\"fa fa-info fa-lg\"></span> &nbsp;About Us</NavLink>\n                </NavItem>\n              </Nav>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <Login/>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </div>\n        </Navbar>\n        \n        <Jumbotron id=\"jumbotron\">\n          <div className=\"container\">\n            <Row>\n              <Col sm={5} className=\"offset-1 text-center\">\n                <h2>Attendance Manager</h2>\n              </Col>\n              <Col sm={5} className=\"offset-1 text-center\">\n                <h5>A web application developed for smart Attendance Management specially for University students.</h5>\n              </Col>\n            </Row>\n          </div>\n        </Jumbotron>\n      </div>\n    );\n  };\n}\n\nexport {Header,Login};","import React,{Component} from 'react';\nimport {Modal,ModalHeader,ModalBody,ModalFooter,Button,Row,Col,Label} from 'reactstrap';\nimport {Control,LocalForm,Errors} from 'react-redux-form';\nimport {Login} from './Header';\nimport {Link} from 'react-router-dom';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || val.length <= len;\nconst minLength = len => val => val && val.length >= len;\n\nclass Register extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      isModalOpen:false\n    };\n    this.toggleModal=this.toggleModal.bind(this);\n  }\n  toggleModal(){\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    })\n  }\n  handleSubmit(values) {\n    var pass=JSON.stringify(values.password);\n    var confirm=JSON.stringify(values.confirmpassword);\n    if(pass!=confirm){\n      alert('Password not matched');\n    }else{\n    window.confirm(\"Current State is: \" + JSON.stringify(values));\n    }\n  }\n  render(){\n    return(\n      <div>\n        <Link id=\"log\"><h6 onClick={this.toggleModal}><span className=\"fa fa-user-plus\"></span> &nbsp;<strong>Register</strong></h6></Link>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Register</ModalHeader>\n          <ModalBody>\n            <LocalForm onSubmit={this.handleSubmit}>\n              <Row className=\"form-group\">\n                <Col sm={6}>\n                  <Label htmlFor=\"roll\">Roll No. :</Label>\n                  <Control.text\n                    model=\".roll\"\n                    id=\"roll\"\n                    name=\"roll\"\n                    placeholder=\"Enter Roll No.\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(5),\n                      maxLength: maxLength(6)\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".roll\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required \",\n                      minLength: \"Must be 5-6 digits\",\n                      maxLength: \"Must be 5-6 digits\"\n                    }}\n                  />\n                </Col>\n                <Col sm={6}>\n                  <Label htmlFor=\"password\">Password :</Label>\n                  <Control.password\n                    model=\".password\"\n                    id=\"password\"\n                    name=\"password\"\n                    placeholder=\"Enter Password\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(6),\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".password\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required \",\n                      minLength: \"Password must contain atleast 6 characters\",\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col md={6}></Col>\n                <Col sm={6}>\n                  <Label htmlFor=\"confirmpassword\">Confirm Password :</Label>\n                  <Control.password\n                    model=\".confirmpassword\"\n                    id=\"confirmpassword\"\n                    name=\"confirmpassword\"\n                    placeholder=\"Confirm Password\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(6),\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".confirmpassword\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required \",\n                      minLength: \"Password must contain atleast 6 characters\",\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Button outline color=\"danger\" onClick={this.toggleModal}>Cancel</Button>  &nbsp;  &nbsp;<Button outline type=\"submit\" value=\"submit\" color=\"success\">Register</Button>\n            </LocalForm>\n          </ModalBody>\n          <ModalFooter><small><strong>Note : &nbsp;</strong>By Registering, You are agreeing all privacy and policy terms.</small></ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nclass Footer extends Component{\n\n  render(){\n    return(\n      <div id=\"footer\">\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-5 offset-1\">\n            <h5>Links</h5><hr></hr>\n            <ul className=\"list-unstyled\">\n              <li><Link to='/AttMng' id=\"log\"><span className=\"fa fa-home\"></span> &nbsp;<strong>Home</strong></Link></li>\n              <li><Link to='/AttMng/aboutus' id=\"log\"><span className=\"fa fa-info\"></span> &nbsp;<strong>About Us</strong></Link></li>                    \n              <li><Link to='/AttMng/contactus' id=\"log\"><span className=\"fa fa-address-card\"></span> &nbsp;<strong>Contact Us</strong></Link></li>\n            </ul>\n            </div>\n            <div className=\"col-5 offset-1\">\n              <h5>Register/Login</h5><hr></hr>\n              <ul className=\"list-unstyled\">\n                <li><Login/></li>\n                <li ><Register/></li>                  \n                <li><Link to='/AttMng/help' id=\"log\"><strong><span className=\"fa fa-question-circle\"></span> &nbsp;Help!</strong></Link></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <hr></hr>\n        <div className=\"row justify-content-center\">             \n          <div className=\"col-auto\">\n            <p>© Copyright 2020 Attendance Manager</p>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\nexport default Footer;","import React from 'react';\n\nclass Back extends React.Component{\n  render(){\n    return(\n      <div>\n        <div class=\"bg\"></div>\n        <div class=\"bg bg2\"></div>\n        <div class=\"bg bg3\"></div>\n      </div>\n    );\n  };\n}\n\nexport default Back;","import React,{Component} from 'react';\n\nclass Body extends Component{\n  render(){\n    return(\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>WELCOME</h1>\n          <h2>TO</h2>\n          <h3>ATTENDANCE MANAGER</h3>\n          <p>To be Updated Soon...</p>\n        </div>\n      </div>\n    );\n  }\n\n}\nexport default Body;","import React,{Component} from 'react';\nimport {Row, Col,} from 'reactstrap';\n\n\nclass Help extends Component{\n\n  render(){\n    return(\n      <div className=\"container\">\n        <h2>This is Help page.</h2>\n        <h4>Contents to be Updated....</h4>\n        <h6>Sorry for Inconvenience !!!</h6>\n      </div>\n    );\n  }\n}\n\nexport default Help;","import React from 'react';\n\nclass Contact extends React.Component{\n  render(){\n    return(\n      <div className='container'>\n        <h2>This is Contact page.</h2>\n        <h4>Contents to be Updated....</h4>\n        <h6>Sorry for Inconvenience !!!</h6>\n      </div>\n    );\n  }\n}\n\nexport default Contact;","import React from 'react';\n\nclass About extends React.Component{\n  render(){\n    return(\n      <div className='container'>\n        <h2>This is About page.</h2>\n        <h4>Contents to be Updated....</h4>\n        <h6>Sorry for Inconvenience !!!</h6>\n      </div>\n    );\n  }\n}\n\nexport default About;","import React,{Component } from 'react';\nimport {Header} from './Header';\nimport Footer from './Footer';\nimport Back from './Back';\nimport Body from './Body';\nimport {Switch, Route, Redirect,withRouter} from 'react-router-dom';\nimport Help from './Help';\nimport Contact from './Contact';\nimport About from './About';\n\nclass Main extends Component{\n\n  render(){\n    return(\n      <div>\n        <Back/>\n        <Header/>\n        <Switch>\n          <Route path=\"/AttMng\" component={Body}/>\n          <Route exact path=\"/AttMng/help\" component={Help}/>\n          <Route exact path=\"/AttMng/aboutus\" component={About}/>\n          <Route exact path=\"/AttMng/contactus\" component={Contact}/> \n          <Redirect to=\"/AttMng\"/>         \n        </Switch>\n        <Footer/>\n      </div>\n    );\n  };\n}\nexport default Main;","import React from 'react';\nimport logo from './favicon.ico';\nimport './App.css';\nimport Main from './components/Main';\nimport {BrowserRouter} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Main/>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/favicon.ba6190a9.ico\";"],"sourceRoot":""}